---
title: Deploying applications
weight: 20
last_reviewed_on: 2022-01-13
review_in: 6 months
---

# Deploy applications

Deploying 9 systems out at the same time can be a non-trivial task. This should
help explain how we do it.

## Concourse

Deploying GovWifi is done via Concourse, [maintained by GovWifi][govwifi_concourse].

You will need to be part of the GovWifi CI/CD Github team, logged in to the Concourse console via Github single sign-on, and be on the VPN.

## Core services

For the core services, there is a [central deployment pipeline][concourse_deploy_pipeline].

The code is hosted in the [pipeline repo][concourse_deploy_pipeline_repo]

This covers the:

- Admin site
- Authentication API
- Logging API
- User Signup API
- Frontend RADIUS
- Safe 'Canary' Restarter

The general process is:

1. Run tests.
2. Deploy Staging.
3. Run the [smoke tests] (except for Frontend FreeRADIUS and Safe Restarter).
4. Manually trigger "Confirm Deploy to <service> Production" to allow Production deploy.
5. Deploy Production.

Each service is deployed independently.

To ensure interoperability between the services, we run Cross-Service tests for the Frontend, and APIs.
This ensures that an update to a service will work between the rest of the services.

### Trigger a deployment

1. Merge your development branch to `master`.
2. Concourse will test, build, and deploy a new image to ECR in Staging.
3. Run the job in the pipeline, titled `Confirm Deploy to <service> Production`.
4. Concourse will deploy a new image to ECR in Production.

Deployments also force the relevant ECS task to update via the `deploy.sh` script (e.g., [here](https://github.com/alphagov/govwifi-logging-api/blob/master/ci/tasks/scripts/deploy.sh#L14) and [see here for the specific command](https://github.com/alphagov/govwifi-concourse-deploy-pipeline/blob/699cd3c989e4affbd7e0c5e5aea454e4bce85a38/aws-helpers.sh#L101)).

Forcing the task to update means the ECS task definition will point to the newly deployed (latest) image in ECR for either Staging or Production.

**Note**: `govwifi-frontend` is an exception to this pattern. In order to propagate changes, the `frontend-cluster` tasks must be restarted.

We recommend restarting the cluster using the `safe-restarter` scheduled task which is part of the `api-cluster`. This can take 1-2 hours.

## Docs and the product page

The [Dev Docs][dev-docs-repo], [Tech Docs][tech-docs-repo], and [Product Page][product-page-repo] 
use a static site generator called [Middleman][middleman].

### Pull Request Previews

Automatic branch previews are deployed to Heroku.

When a PR is raised, a deploy is triggered automatically and the link appears inline on the PR.

### Production

Each repo has it's own pipeline which deploys out to [GovPaaS][govpaas] whenever a change is made to the `master` branch.

#### Trigger a deployment

1. Merge your development branch to `master`.
2. Concourse will build + deploy to GovPaaS.
3. Verify contents is deployed (you may need to add a `GET` parameter to bust the cache).


[govwifi_concourse]: https://govwifi-cd.wifi.service.gov.uk/
[concourse_deploy_pipeline]: https://govwifi-cd.wifi.service.gov.uk/teams/govwifi/pipelines/deploy
[concourse_deploy_pipeline_repo]: https://github.com/alphagov/govwifi-concourse-deploy-pipeline
[dev-docs-repo]: https://github.com/alphagov/govwifi-dev-docs
[tech-docs-repo]: https://github.com/alphagov/govwifi-tech-docs
[product-page-repo]: https://github.com/alphagov/govwifi-product-page
[govpaas]: https://www.cloud.service.gov.uk/
[middleman]: https://middlemanapp.com/
[smoke tests]: https://github.com/alphagov/govwifi-smoke-tests
