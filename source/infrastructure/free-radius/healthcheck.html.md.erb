---
title: FreeRADIUS Healthcheck
weight: 100
last_reviewed_on: 2022-02-21
review_in: 6 months
---

# The FreeRADIUS Healthcheck

The [Route53 healthcheck](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html) connects to port `3000` on a specific FreeRADIUS servers. For example:
```
http://12.345.678.91:3000/
```

A Ruby process listens on port `3000`. When it receives a request for `"/"`, it automatically runs an [`eapol_test`](https://github.com/alphagov/govwifi-frontend/blob/master/healthcheck/app.rb#L28) command, which then connects to the Authentication API and returns a `200` response in case a successful response is received.

The [configuration for the healthcheck](https://github.com/alphagov/govwifi-frontend/blob/master/healthcheck/peap-mschapv2.conf.erb) `eapol_test` can be found on GitHub.

If you need to manually test the healthcheck in a radius docker container you can do:
```
eapol_test -c /usr/src/healthcheck/peap-mschapv2.conf -s $(echo $HEALTH_CHECK_RADIUS_KEY)
```

The secret can also be found by logging in as a GovWifi administrator (for staging you would login [here](https://admin.staging-temp.wifi.service.gov.uk/) ), switching to the GDS CTS organisation, then selecting “Locations” and scrolling to “Health check user”.

It should also be noted that the last login of the health check user is no longer recorded in the User database.

The failure of the health check does not actually trigger a new Radius docker container to be spawned. It only sends a notification email to govwifi-devops@digital.cabinet-office.gov.uk .

You can learn more about the healthcheck [here](https://github.com/alphagov/govwifi-frontend#healthcheck).
