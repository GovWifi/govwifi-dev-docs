---
title: Learn about FreeRADIUS
weight: 80
last_reviewed_on: 2022-01-14
review_in: 6 months
---

# Learn about FreeRADIUS

## AAA

The FreeRADIUS servers operated by the GovWifi team control network access with
[AAA authentication](https://en.wikipedia.org/wiki/AAA_(computer_security)).

![Exchange with Supplicant](/images/radius_exchange.png)

### Authentication

- Runs on port 1812.
- Requests user details stored in the database via the [Authentication API](https://github.com/alphagov/govwifi-authentication-api).

### Authorisation

- We do not have different levels of access so this is a NOOP.

### Accounting

Traffic on port 1813 isn't routed through to FreeRADIUS.

## Unlang

FreeRADIUS is configured using a language called [Unlang](https://freeradius.org/radiusd/man/unlang.html).

We favor keeping all complex functionality in the backend APIs, instead of in Unlang.

This way it is easier to test and change in the future.

![FreeRADIUS](/images/free_radius.png)

## FreeRADIUS Server

This is the software installed on our RADIUS servers.

It is open source and can be found on [Github](https://github.com/FreeRADIUS/freeradius-server).

![FreeRADIUS server](/images/free_radius_server.png)

## The frontend health check

Within the frontend task, a Ruby process listens on port `3000`. When
it receives a request for `"/"`, it runs
[`eapol_test`][frontend-eapol]), which replicates the requests that
come from deployments of GovWifi. This includes connecting to the
Authentication and Logging APIs.

[frontend-eapol]: https://github.com/alphagov/govwifi-frontend/blob/master/healthcheck/app.rb#L28
